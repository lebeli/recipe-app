worker_processes 1;
 
events { worker_connections 1024; }

http {

    server {
        listen 80;
        server_name localhost;

        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
            proxy_pass http://frontend;
        }

        location /api {
            proxy_pass http://backend:8080/;
        }
    }

}


#https://www.bogotobogo.com/DevOps/Docker/Docker-Compose-Nginx-Reverse-Proxy-Multiple-Containers.php

# worker_processes 1;
 
# events { worker_connections 1024; }


# http {

    # upstream docker-nginx {
    #     server frontend:80;
    # }
 
    # upstream docker-maven {
    #     server backend:80;
    # }

    # upstream docker-mysql {
    #     server mysql-docker-container:3306;
    # }

    # proxy_set_header   Host $host;
    # proxy_set_header   X-Real-IP $remote_addr;
    # proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    # proxy_set_header   X-Forwarded-Host $server_name;
 
    # server {
    #     listen 80;
 
    #     location / {
    #         proxy_pass         http://fluffy-bear_frontend_1;
    #         proxy_redirect     off;
    #     }
    # }
 
    # server {
    #     listen 8080;
 
    #     location / {
    #         proxy_pass         http://fluffy-bear_backend_1;
    #         proxy_redirect     off;
    #     }
    # }

    # server {
    #     listen 80;
 
    #     location / {
    #         proxy_pass         http://docker-mysql;
    #         proxy_redirect     off;
    #     }
    # }
# }


# upstream frontend {
#         server http://fluffy-bear_frontend_1:80;
#     }

#     upstream backend {
#         server http://fluffy-bear_backend_1:8080;
#     }

#     proxy_set_header   Host $host;
#     proxy_set_header   X-Real-IP $remote_addr;
#     proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_set_header   X-Forwarded-Host $server_name;

#     server {
#         listen 80;
        
#         location /frontend {
#             proxy_pass http://frontend;
#         }

#         location /backend {
#             proxy_pass http://backend;
#         }
#     }